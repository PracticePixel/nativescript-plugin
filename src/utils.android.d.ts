import Activity = android.app.Activity;
import Context = android.content.Context;
import ResolveInfo = android.content.pm.ResolveInfo;
import List = java.util.List;
import { AuthSessionResult, BrowserResult } from "./sanar-telemedicine.common";
export declare function useAndroidX(): typeof androidx.browser;
export declare type Builder = androidx.browser.customtabs.CustomTabsIntent.Builder;
export declare const CustomTabsIntent: typeof androidx.browser.customtabs.CustomTabsIntent;
export declare const CustomTabsClient: typeof androidx.browser.customtabs.CustomTabsClient;
export declare const CustomTabsServiceConnection: typeof androidx.browser.customtabs.CustomTabsServiceConnection;
export declare const CustomTabsService: typeof androidx.browser.customtabs.CustomTabsService;
export declare const CustomTabsCallback: typeof androidx.browser.customtabs.CustomTabsCallback;
export declare const ColorUtils: typeof androidx.core.graphics.ColorUtils;
export declare const CHROME_PACKAGE_STABLE = "com.android.chrome";
export declare const CHROME_PACKAGE_BETA = "com.chrome.beta";
export declare const CHROME_PACKAGE_DEV = "com.chrome.dev";
export declare const LOCAL_PACKAGE = "com.google.android.apps.chrome";
export declare const ACTION_CUSTOM_TABS_CONNECTION = "android.support.customtabs.action.CustomTabsService";
export declare const ARROW_BACK_BLACK = "ic_arrow_back_black";
export declare const ARROW_BACK_WHITE = "ic_arrow_back_white";
export declare const DISMISSED_EVENT = "DismissedEvent";
export declare const getDrawableId: typeof import("@nativescript/core/utils").ad.resources.getDrawableId;
export declare function getInitialURL(activity: Activity): string;
export declare function openAuthSessionPolyfillAsync(open: () => Promise<BrowserResult>, returnUrl: string): Promise<AuthSessionResult>;
export declare function closeAuthSessionPolyfillAsync(): void;
export declare function getPreferredPackages(context: Context): List<ResolveInfo>;
export declare function toolbarIsLight(themeColor: number): boolean;
export declare function getDefaultBrowser(context: Context): string;
